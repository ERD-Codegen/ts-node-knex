name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - master

jobs:
  #
  install-node:
    name: Install Node
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Cache the PNPM Store
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

  #
  spell-check:
    name: Spell Checking
    runs-on: ubuntu-latest
    needs: ["install-node"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Restore the PNPM Store Cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Check Spelling
        run: npm run spell-check

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: ["install-node"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Restore the PNPM Store Cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Unit Tests
        run: npm run test

  #
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: ["install-node"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Restore the PNPM Store Cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Lint the Program
        run: npm run lint

  db-migration-test:
    name: Database Migration Test
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ci
    needs: ["install-node"]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_USER: mysql
          MYSQL_DATABASE: conduit
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Restore the PNPM Store Cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Database Migration
        working-directory: ./packages/core
        run: npm run migrate-db

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    env:
      NODE_ENV: ci
    needs: ["spell-check", "unit-test", "db-migration-test"]
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_PASSWORD: mysql
          MYSQL_USER: mysql
          MYSQL_DATABASE: conduit
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 6.32.9
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          cache: 'pnpm'
      - name: Restore the PNPM Store Cache
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run Database Migration
        working-directory: ./packages/core
        run: npm run migrate-db
      - name: Start Server at the background
        working-directory: ./apps/server
        run: npm run start:ci
      - name: Wait for the server to start
        working-directory: ./test/integration
        run: ./wait-for-readiness.sh
      - name: Run Integration Test
        working-directory: ./test/integration
        run: ./api-test.sh
