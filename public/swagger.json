{
    "swagger": "2.0",
    "info": {
        "title": "Real World Application",
        "description": "Example Node (Express + MySql) codebase containing real world examples (CRUD, auth, advanced patterns, etc) that adheres to the RealWorld API spec.",
        "termsOfService": "http://localhost:3100/termsOfService.html",
        "version": "1.0.0",
        "contact": {
            "name": "Ken Yip",
            "url": "https://github.com/kenyipp",
            "email": "ken20206@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3100",
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "description": "For accessing the protected API resources, you must have received a a valid JWT token after registering or logging in. This JWT token must then be used for all protected resources by passing it in via the 'Authorization' header.\n\nA JWT token is generated by the API by either registering via /users or logging in via /users/login.\n\nThe following format must be in the 'Authorization' header :\n\n    Token: xxxxxx.yyyyyyy.zzzzzz\n    \n",
            "in": "header"
        }
    },
    "paths": {
        "/users/login": {
            "post": {
                "summary": "Existing User Login",
                "description": "Login for existing user",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "UserLogin",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Credentials to use",
                        "schema": {
                            "$ref": "#/definitions/UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 4,
                                    "maxLength": 52,
                                    "description": "The username (handle) of the user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "The email address of the user"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Unique token string generated by the API call"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "A short description about the user"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "Image URL which is used to display on the website"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "user": {
                                    "email": "testing@test.com",
                                    "token": "<ACCESS_TOKEN>",
                                    "username": "testing",
                                    "bio": null,
                                    "image": null
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "summary": "User Registration",
                "description": "Register a new user",
                "operationId": "CreateUser",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "description": "Details of the new user to register",
                        "schema": {
                            "$ref": "#/definitions/UserRegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 4,
                                    "maxLength": 52,
                                    "description": "The username (handle) of the user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "The email address of the user"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Unique token string generated by the API call"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "A short description about the user"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "Image URL which is used to display on the website"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "user": {
                                    "email": "testing@test.com",
                                    "token": "<ACCESS_TOKEN>",
                                    "username": "testing",
                                    "bio": null,
                                    "image": null
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        },
                        "examples": {
                            "application/json": {
                                "errors": {
                                    "body": [
                                        "\"username\" length must be at least 4 characters long",
                                        "\"email\" must be a valid email",
                                        "\"password\" length must be at least 6 characters long"
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "summary": "Get Current User",
                "description": "Get the user document from requests' access token",
                "operationId": "getCurrentUser",
                "tags": [
                    "User"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 4,
                                    "maxLength": 52,
                                    "description": "The username (handle) of the user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "The email address of the user"
                                },
                                "token": {
                                    "type": "string",
                                    "description": "Unique token string generated by the API call"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "A short description about the user"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "Image URL which is used to display on the website"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "user": {
                                    "email": "testing@test.com",
                                    "token": "<ACCESS_TOKEN>",
                                    "username": "testing",
                                    "bio": null,
                                    "image": null
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    },
                    "default": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    }
                }
            }
        },
        "/profiles/:username": {
            "get": {
                "summary": "Get a profile",
                "description": "Get a profile of a user of the system. Auth is optional",
                "tags": [
                    "Profile"
                ],
                "operationId": "GetProfileByUsername",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "description": "Username of the profile to get",
                        "schema": {
                            "$ref": "#/definitions/Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 4,
                                    "maxLength": 52,
                                    "description": "The username (handle) of the user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "The email address of the user"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "A short description about the user"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "Image URL which is used to display on the website"
                                },
                                "following": {
                                    "type": "boolean",
                                    "description": "Variable that indicates the authenticated user is following the target user or not"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "profile": {
                                    "username": "testing",
                                    "bio": null,
                                    "image": null,
                                    "following": true
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    },
                    "default": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    }
                }
            }
        },
        "/profiles/{username}/follow": {
            "post": {
                "summary": "Follow a user",
                "description": "Follow a user by username",
                "tags": [
                    "Profile"
                ],
                "security": [
                    {
                        "Token": []
                    }
                ],
                "operationId": "FollowUserByUsername",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "description": "Username of the profile to get",
                        "schema": {
                            "$ref": "#/definitions/Username"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "type": "string",
                                    "minLength": 4,
                                    "maxLength": 52,
                                    "description": "The username (handle) of the user"
                                },
                                "email": {
                                    "type": "string",
                                    "format": "email",
                                    "description": "The email address of the user"
                                },
                                "bio": {
                                    "type": "string",
                                    "description": "A short description about the user"
                                },
                                "image": {
                                    "type": "string",
                                    "description": "Image URL which is used to display on the website"
                                },
                                "following": {
                                    "type": "boolean",
                                    "description": "Variable that indicates the authenticated user is following the target user or not"
                                }
                            }
                        },
                        "examples": {
                            "application/json": {
                                "profile": {
                                    "username": "testing",
                                    "bio": null,
                                    "image": null,
                                    "following": true
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    },
                    "default": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/GeneralError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "UserLoginRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "object",
                    "required": [
                        "email",
                        "password"
                    ],
                    "properties": {
                        "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The email address of the user"
                        },
                        "password": {
                            "type": "string",
                            "minLength": 6
                        }
                    }
                }
            }
        },
        "UserRegisterRequest": {
            "type": "object",
            "required": [
                "user"
            ],
            "properties": {
                "user": {
                    "type": "object",
                    "required": [
                        "username",
                        "email",
                        "password"
                    ],
                    "properties": {
                        "username": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 52,
                            "description": "The username (handle) of the user"
                        },
                        "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The email address of the user"
                        },
                        "password": {
                            "type": "string",
                            "minLength": 6
                        }
                    }
                }
            }
        },
        "Username": {
            "type": "string",
            "minLength": 4,
            "maxLength": 52,
            "description": "The username (handle) of the user"
        },
        "GeneralError": {
            "properties": {
                "errors": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string",
                            "description": "A summary of the error that occurs"
                        },
                        "body": {
                            "type": "array",
                            "description": "An array of error messages",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more GitHub projects of the author",
        "url": "https://github.com/kenyipp"
    }
}