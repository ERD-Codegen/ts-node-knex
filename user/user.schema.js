"use strict";

const Joi = require("joi");

const username = Joi
	.string()
	.description("The username (handle) of the user")
	.min(4)
	.max(52);

const email = Joi
	.string()
	.email()
	.description("The email address of the user");

const password = Joi
	.string()
	.min(6)
	/**
	 *
	 * Since there are no restrictions on the password on
	 * real-world documentation,
	 * I have commented on this validation to allow the application
	 * to pass the example request body.
	 *
	 * It is a good refernce of the password limitaion:
	 * https://account.cern.ch/account/Help/?kbid=020040
	 *
	 */
	// .test(
	// 	"Invalid Password",
	// 	"The password must be at least 6 characters long and contain at least an uppercase character, a lowercase character and a digit",
	// 	(value) => {
	// 		return /[A-Z]/.test(value) && /[a-z]/.test(value) && /\d/.test(value);
	// 	}
	// )
	.required();

const user = Joi.object({
	username,
	email,
	token: Joi
		.string()
		.description("Unique token string generated by the API call"),
	bio: Joi
		.string()
		.description("A short description about the user"),
	image: Joi
		.string()
		.description("Image URL which is used to display on the website")
});

const update = Joi.object({ user });

const login = Joi.object({
	user: Joi
		.object({
			email: email.required(),
			password: password.required()
		})
		.required()
});

const register = Joi.object({
	user: Joi
		.object({
			username: username.required(),
			email: email.required(),
			password: password.required()
		})
		.required()
});

module.exports = {
	doc: user,
	login,
	register,
	update
};
